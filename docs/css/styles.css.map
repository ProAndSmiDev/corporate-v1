{"version":3,"sources":["helpers/mixins.scss","helpers/fonts.scss","main.css","helpers/animations.scss","helpers/clear.scss","helpers/funcs.scss","helpers/vars.scss"],"names":[],"mappings":"AACE;EACE,qBCFuB;EDGvB,kBAAkB;EAIlB,gBCP4C;EDQ5C,0HACgE;AEJpE;;AFJE;EACE,qBCDuB;EDEvB,kBAAkB;EAIlB,gBCN8C;EDO9C,8HACgE;AEGpE;;AFXE;EACE,qBCAuB;EDCvB,kBAAkB;EAIlB,gBCL6C;EDM7C,4HACgE;AEUpE;;AFlBE;EACE,qBCCuB;EDAvB,kBAAkB;EAIlB,gBCJ2C;EDK3C,wHACgE;AEiBpE;;AC1BA;EACE;IACE,oDAA4C;YAA5C,4CAA4C;ED6B9C;EC1BA;IACE,qDAA6C;YAA7C,6CAA6C;ED4B/C;ECzBA;IACE,kDAA0C;YAA1C,0CAA0C;ED2B5C;AACF;;ACtCA;EACE;IACE,oDAA4C;YAA5C,4CAA4C;ED6B9C;EC1BA;IACE,qDAA6C;YAA7C,6CAA6C;ED4B/C;ECzBA;IACE,kDAA0C;YAA1C,0CAA0C;ED2B5C;AACF;;ACxBA;EACE,kDAA0C;UAA1C,0CAA0C;AD2B5C;;AC5BA;EAII,8BAAsB;UAAtB,sBAAsB;AD4B1B;;AE9CA;EACE,8BAAsB;UAAtB,sBAAsB;EACtB,UAAU;EACV,SAAS;EACT,aAAa;AFiDf;;AE9CA;EACE,uBAAuB;AFiDzB;;AE9CA;EACE,mBAAc;MAAd,kBAAc;UAAd,cAAc;AFiDhB;;AE9CA;EACE,oBCHoD;EDIpD,uBCJoD;AHqDtD;;AE9CA;EACE,qBAAqB;EACrB,WAAW;EACX,cAAc;AFiDhB;;AE9CA;EACE,WAAW;EACX,YAAY;EACZ,oBAAiB;KAAjB,iBAAiB;AFiDnB;;AE9CA;EACE,qBAAqB;EACrB,4CAAoC;EAApC,uCAAoC;EAApC,oCAAoC;AFiDtC;;AEnDA;EAKI,YAAY;AFkDhB;;AE9CA;EACE,eAAe;EACf,aAAa;EACb,YAAY;EACZ,6BAA6B;AFiD/B;;AErDA;EAOI,aAAa;AFkDjB;;AE9CA;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,gBAAgB;AFiDlB;;AE9CA;EACE,cAAc;EACd,aAAa;AFiDf;;AEnDA;EAKI,YAAY;AFkDhB;;AEvDA;EAKI,YAAY;AFkDhB;;AEvDA;EAKI,YAAY;AFkDhB;;AEvDA;EAKI,YAAY;AFkDhB;;AEvDA;EAKI,YAAY;AFkDhB;;AE9CA;EACE,mBAAc;MAAd,kBAAc;UAAd,cAAc;AFiDhB;;AE9CA;EACE,sDExE4C;AJyH9C;;AE7CE;EACE,eAAe;EACf,aAAa;EACb,WAAW;AFgDf;;AE7CE;EACE,wBAAgB;EAAhB,gBAAgB;AFgDpB;;AE5CA;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,4BAAsB;EAAtB,6BAAsB;MAAtB,0BAAsB;UAAtB,sBAAsB;EACtB,yBAA8B;MAA9B,sBAA8B;UAA9B,8BAA8B;EAC9B,iBAAiB;EACjB,kBAAkB;EAClB,iBAAiB;AF+CnB;;AE5CA;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,4BAAsB;EAAtB,6BAAsB;MAAtB,0BAAsB;UAAtB,sBAAsB;EACtB,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,yBAA8B;MAA9B,sBAA8B;UAA9B,8BAA8B;EAC9B,uBCxFoD;EDyFpD,sBCzFoD;ED0FpD,WAAW;EACX,kBC3FoD;ED4FpD,kBAAkB;EAClB,iBAAiB;AF+CnB;;AE7CE;EACE,8BAAmB;EAAnB,6BAAmB;MAAnB,uBAAmB;UAAnB,mBAAmB;AFgDvB","file":"styles.css","sourcesContent":["@mixin setFamily($fontName, $fileName, $fontWeight, $fontStyle: false) {\n  @font-face {\n    font-family: $fontName;\n    font-display: swap;\n    @if $fontStyle {\n      font-style: italic;\n    }\n    font-weight: $fontWeight;\n    src: url('../fonts/#{$fontName}/#{$fileName}.woff2') format('woff2'),\n    url('../fonts/#{$fontName}/#{$fileName}.ttf') format('truetype');\n  }\n}\n\n@mixin setTruncate {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n","@include setFamily('Gilroy', 'Gilroy-Light', 300);\r\n@include setFamily('Gilroy', 'Gilroy-Regular', 400);\r\n@include setFamily('Gilroy', 'Gilroy-Medium', 500);\r\n@include setFamily('Gilroy', 'Gilroy-Bold', 700);\r\n","@font-face {\n  font-family: \"Gilroy\";\n  font-display: swap;\n  font-weight: 300;\n  src: url(\"../fonts/Gilroy/Gilroy-Light.woff2\") format(\"woff2\"), url(\"../fonts/Gilroy/Gilroy-Light.ttf\") format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Gilroy\";\n  font-display: swap;\n  font-weight: 400;\n  src: url(\"../fonts/Gilroy/Gilroy-Regular.woff2\") format(\"woff2\"), url(\"../fonts/Gilroy/Gilroy-Regular.ttf\") format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Gilroy\";\n  font-display: swap;\n  font-weight: 500;\n  src: url(\"../fonts/Gilroy/Gilroy-Medium.woff2\") format(\"woff2\"), url(\"../fonts/Gilroy/Gilroy-Medium.ttf\") format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Gilroy\";\n  font-display: swap;\n  font-weight: 700;\n  src: url(\"../fonts/Gilroy/Gilroy-Bold.woff2\") format(\"woff2\"), url(\"../fonts/Gilroy/Gilroy-Bold.ttf\") format(\"truetype\");\n}\n\n@keyframes pulse {\n  0% {\n    box-shadow: 0 0 0 0 rgba(253, 228, 165, 0.4);\n  }\n  70% {\n    box-shadow: 0 0 0 10px rgba(223, 228, 165, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0 rgba(223, 228, 165, 0);\n  }\n}\n\n.pulse {\n  animation: pulse 1.5s ease-in-out infinite;\n}\n\n.pulse:hover {\n  animation-duration: 1s;\n}\n\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n  font: inherit;\n}\n\nhtml {\n  scroll-behavior: smooth;\n}\n\nmain {\n  flex: 1 0 auto;\n}\n\nsection {\n  padding-top: 5.625em;\n  padding-bottom: 5.625em;\n}\n\npicture {\n  display: inline-block;\n  width: 100%;\n  line-height: 0;\n}\n\nimg {\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n}\n\na {\n  text-decoration: none;\n  transition: opacity 0.3s ease-in-out;\n}\n\na:hover {\n  opacity: 0.6;\n}\n\nbutton {\n  cursor: pointer;\n  outline: none;\n  border: none;\n  background-color: transparent;\n}\n\nbutton:focus {\n  outline: none;\n}\n\nul {\n  display: flex;\n  align-items: center;\n  list-style: none;\n}\n\ninput {\n  outline: unset;\n  border: unset;\n}\n\ninput::placeholder {\n  opacity: 0.6;\n}\n\nfooter {\n  flex: 0 0 auto;\n}\n\nbody {\n  font: 16px/1.5 \"Gilroy\", \"Arial\", \"Roboto\", sans-serif;\n}\n\n.header--is-fixed {\n  position: fixed;\n  z-index: 1000;\n  width: 100%;\n}\n\n.header--is-sticky {\n  position: sticky;\n}\n\n.page {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  min-height: 100vh;\n  margin-right: auto;\n  margin-left: auto;\n}\n\n.u-wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  padding-right: 0.9375em;\n  padding-left: 0.9375em;\n  width: 100%;\n  max-width: 71.25em;\n  margin-right: auto;\n  margin-left: auto;\n}\n\n.u-wrapper--is-row {\n  flex-direction: row;\n}\n","@keyframes pulse {\n  0% {\n    box-shadow: 0 0 0 0 rgba(253, 228, 165, 0.4);\n  }\n\n  70% {\n    box-shadow: 0 0 0 10px rgba(223, 228, 165, 0);\n  }\n\n  100% {\n    box-shadow: 0 0 0 0 rgba(223, 228, 165, 0);\n  }\n}\n\n.pulse {\n  animation: pulse 1.5s ease-in-out infinite;\n\n  &:hover {\n    animation-duration: 1s;\n  }\n}\n","* {\r\n  box-sizing: border-box;\r\n  padding: 0;\r\n  margin: 0;\r\n  font: inherit;\r\n}\r\n\r\nhtml {\r\n  scroll-behavior: smooth;\r\n}\r\n\r\nmain {\r\n  flex: 1 0 auto;\r\n}\r\n\r\nsection {\r\n  padding-top: em(90, $fz);\r\n  padding-bottom: em(90, $fz);\r\n}\r\n\r\npicture {\r\n  display: inline-block;\r\n  width: 100%;\r\n  line-height: 0;\r\n}\r\n\r\nimg {\r\n  width: 100%;\r\n  height: auto;\r\n  object-fit: cover;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  transition: opacity 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    opacity: 0.6;\r\n  }\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n  outline: none;\r\n  border: none;\r\n  background-color: transparent;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n}\r\n\r\nul {\r\n  display: flex;\r\n  align-items: center;\r\n  list-style: none;\r\n}\r\n\r\ninput {\r\n  outline: unset;\r\n  border: unset;\r\n\r\n  &::placeholder {\r\n    opacity: 0.6;\r\n  }\r\n}\r\n\r\nfooter {\r\n  flex: 0 0 auto;\r\n}\r\n\r\nbody {\r\n  font: #{$fz_base}px/1.5 $font;\r\n}\r\n\r\n.header {\r\n  &--is-fixed {\r\n    position: fixed;\r\n    z-index: 1000;\r\n    width: 100%;\r\n  }\r\n\r\n  &--is-sticky {\r\n    position: sticky;\r\n  }\r\n}\r\n\r\n.page {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  min-height: 100vh;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n}\r\n\r\n.u-wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding-right: em(15, $fz);\r\n  padding-left: em(15, $fz);\r\n  width: 100%;\r\n  max-width: em(1140, $fz);\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n\r\n  &--is-row {\r\n    flex-direction: row;\r\n  }\r\n}\r\n","@function strip-units($unit) {\n  @return $unit / ($unit * 0 + 1);\n}\n\n@function em($args...) {\n  $context: strip-units(nth($args, length($args)));\n  $result: ();\n  $separator: list_separator($args);\n\n  @for $i from 1 through length($args) - 1 {\n    $value: nth($args, $i);\n    @if type-of($value) == 'number' {\n      $value: strip-units($value);\n      $result: append($result, $value / $context * 1em, $separator);\n    } @else if type-of($value) == 'list' {\n      $result: append($result, em(append($value, $context)...), $separator);\n    } @else {\n      $result: append($result, $value, $separator);\n    }\n  }\n\n  @return if(length($result) == 1, nth($result, 1), $result);\n}\n\n@function vw($values...) {\n  $size: strip-units(nth($values, length($values)));\n  $result: ();\n  $separator: list_separator($values);\n\n  @for $i from 1 through length($values) - 1 {\n    $value: nth($values, $i);\n    @if type-of($value) == 'number' {\n      $value: strip-units($value);\n      $result: append($result, $value / $size * 100vw, $separator);\n    } @else if type-of($value) == 'list' {\n      $result: append($result, vw(append($value, $size)...), $separator);\n    } @else {\n      $result: append($result, $value, $separator);\n    }\n  }\n\n  @return if(length($result) == 1, nth($result, 1), $result);\n}\n","$font: 'Gilroy', 'Arial', 'Roboto', sans-serif;\r\n\r\n$theme: hsl(217, 84%, 55%);\r\n$primary: hsl(0, 0%, 100%);\r\n$secondary: hsl(216, 15%, 20%);\r\n\r\n$primary_alternate: hsl(233, 4%, 58%);\r\n$social: desaturate(darken($theme, 20%), 4%);\r\n"]}